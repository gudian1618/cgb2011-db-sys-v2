<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.gudian1618.cgb2011dbsysv2.dao.SysRoleDao">

    <!--提取共性动态sql语句-->
    <sql id="queryWhereId">
        from sys_roles
        <where>
            <if test="name!=null and name!=''">
                name like concat("%",#{name},"%")
            </if>
        </where>
    </sql>

    <!--insert元素中的
        1.useGeneratedKeys表示要使用的insert操作后主键值
        2.keyProperty表示将主键值存储到参数对象的id属性上.-->
    <insert id="insertObject"
            parameterType="com.github.gudian1618.cgb2011dbsysv2.entity.SysRole"
            useGeneratedKeys="true"
            keyProperty="id"
            >
--         select last_insert_id();
        insert into sys_roles (id,name,note,createdUser,modifiedUser,createdTime,modifiedTime)
        values (null,#{name},#{note},#{createdUser},#{modifiedUser},now(),now())
    </insert>

    <select id="findPageObjects" resultType="com.github.gudian1618.cgb2011dbsysv2.entity.SysRole">
        select id,name,note,createdTime,modifiedTime,createdUser,modifiedUser
        <include refid="queryWhereId"/>
        order by createdTime desc
        limit #{startIndex},#{pageSize}
    </select>

    <select id="getRowCount" resultType="long">
        select count(*)
        <include refid="queryWhereId"/>
    </select>

    <!--<select id="findObjectById" resultType="com.github.gudian1618.cgb2011dbsysv1.common.vo.SysRoleMenuVo">-->
    <!--    select id,name,note-->
    <!--    from sys_roles-->
    <!--    where id=#{id}-->
    <!--</select>-->

    <!--resultMap元素一般应用于高级映射
    1.自定义字段映射 (比方说将表中的role_name字段存储到PoJo对象中的name属性中)
    2.嵌套查询映射
    3.多表关联查询映射
    -->
    <resultMap id="sysRoleMenuVo" type="com.github.gudian1618.cgb2011dbsysv2.common.vo.SysRoleMenuVo">
        <!--id元素一般用于主键映射-->
        <!--当字段名与属性名不一致时,需要写如下标签内容来映射,否则一致时,可以省略.
        但是也有条件,例如不会在基于此字段进行嵌套或关联字段查询,否则不能省略-->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="note" column="note"/>
        <!--基于角色id,再次查询菜单id,将查询的结果存储到menuIDs属性上-->
        <!--collection元素一般应用于one2many查询或映射-->

        <!--<collection property="menuIds"-->
        <!--            column="id"-->
        <!--            select="com.github.gudian1618.cgb2011dbsysv1.dao.SysRoleMenuDao.findMenuIdsByRoleId">-->
        <!--</collection>-->

        <collection property="menuIds"
                    ofType="integer">
                    <result column="menu_id"/>
        </collection>
    </resultMap>
    <!--<select id="findObjectById" resultMap="sysRoleMenuVo">-->
    <!--    select id,name,note-->
    <!--    from sys_roles-->
    <!--    where id=#{id}-->
    <!--</select>-->
    <select id="findObjectById" resultMap="sysRoleMenuVo">
        select r.id,r.name,r.note,rm.menu_id
        from sys_roles r left join sys_role_menus rm
        on r.id=rm.role_id
        where r.id=#{id}
    </select>

</mapper>
